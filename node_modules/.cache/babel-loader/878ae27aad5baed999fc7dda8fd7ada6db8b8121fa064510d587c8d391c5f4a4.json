{"ast":null,"code":"var _jsxFileName = \"/Users/anirudhyadav/Documents/GitHub/anirudhyadav.github.io/src/components/EDACards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EDACards = () => {\n  _s();\n  const [scenarios, setScenarios] = useState([]);\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + '/eda_scenarios.json').then(res => res.json()).then(data => setScenarios(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eda-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD0D Exploratory Data Analysis Scenarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eda-grid\",\n      children: scenarios.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eda-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Target:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 16\n          }, this), \" \", item.target]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }, this), \" \", item.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eda-actions\",\n          children: [item.dataset && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.dataset,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"\\uD83D\\uDCC2 Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), item.notebook && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.notebook,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"\\uD83D\\uDCC2 Notebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), item.report && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/reports/${item.report}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"\\uD83D\\uDCCA AutoEDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(EDACards, \"v54NLGvVfwEwZ530YHcP87cIeuk=\");\n_c = EDACards;\nexport default EDACards;\nvar _c;\n$RefreshReg$(_c, \"EDACards\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EDACards","_s","scenarios","setScenarios","fetch","process","env","PUBLIC_URL","then","res","json","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","idx","title","target","type","description","dataset","href","rel","notebook","report","_c","$RefreshReg$"],"sources":["/Users/anirudhyadav/Documents/GitHub/anirudhyadav.github.io/src/components/EDACards.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst EDACards = () => {\n  const [scenarios, setScenarios] = useState([]);\n\n  useEffect(() => {\n    fetch(process.env.PUBLIC_URL + '/eda_scenarios.json')\n      .then(res => res.json())\n      .then(data => setScenarios(data));\n  }, []);\n\n  return (\n    <div className=\"eda-section\">\n      <h2>üîç Exploratory Data Analysis Scenarios</h2>\n      <div className=\"eda-grid\">\n        {scenarios.map((item, idx) => (\n          <div className=\"eda-card\" key={idx}>\n            <h3>{item.title}</h3>\n            <p><strong>Target:</strong> {item.target}</p>\n            <p><strong>Type:</strong> {item.type}</p>\n            <p>{item.description}</p>\n            <div className=\"eda-actions\">\n                {item.dataset && (\n                    <a href={item.dataset} target=\"_blank\" rel=\"noopener noreferrer\">üìÇ Dataset</a>\n                )}\n                {item.notebook && (\n                    <a href={item.notebook} target=\"_blank\" rel=\"noopener noreferrer\">üìÇ Notebook</a>\n                )}\n                {item.report && (\n                    <a href={`/reports/${item.report}`} target=\"_blank\" rel=\"noopener noreferrer\">üìä AutoEDA</a>\n                )}\n                </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default EDACards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}