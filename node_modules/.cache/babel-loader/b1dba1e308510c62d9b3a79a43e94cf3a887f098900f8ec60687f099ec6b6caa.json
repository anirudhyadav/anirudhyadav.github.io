{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";function SearchBar(_ref){let{onSearch}=_ref;const[query,setQuery]=useState('');const handleInput=e=>{setQuery(e.target.value);onSearch(e.target.value);};return/*#__PURE__*/_jsx(\"div\",{style:{margin:'1rem 0'},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uD83D\\uDD0D Search models, metrics, use cases...\",value:query,onChange:handleInput,style:{width:'100%',padding:'0.5rem'}})});}export default SearchBar;","map":{"version":3,"names":["React","useState","jsx","_jsx","SearchBar","_ref","onSearch","query","setQuery","handleInput","e","target","value","style","margin","children","type","placeholder","onChange","width","padding"],"sources":["/Users/anirudhyadav/Documents/GitHub/anirudhyadav.github.io/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction SearchBar({ onSearch }) {\n  const [query, setQuery] = useState('');\n\n  const handleInput = (e) => {\n    setQuery(e.target.value);\n    onSearch(e.target.value);\n  };\n\n  return (\n    <div style={{ margin: '1rem 0' }}>\n      <input\n        type=\"text\"\n        placeholder=\"🔍 Search models, metrics, use cases...\"\n        value={query}\n        onChange={handleInput}\n        style={{ width: '100%', padding: '0.5rem' }}\n      />\n    </div>\n  );\n}\n\nexport default SearchBar;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7B,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAQ,WAAW,CAAIC,CAAC,EAAK,CACzBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACxBN,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC1B,CAAC,CAED,mBACET,IAAA,QAAKU,KAAK,CAAE,CAAEC,MAAM,CAAE,QAAS,CAAE,CAAAC,QAAA,cAC/BZ,IAAA,UACEa,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,mDAAyC,CACrDL,KAAK,CAAEL,KAAM,CACbW,QAAQ,CAAET,WAAY,CACtBI,KAAK,CAAE,CAAEM,KAAK,CAAE,MAAM,CAAEC,OAAO,CAAE,QAAS,CAAE,CAC7C,CAAC,CACC,CAAC,CAEV,CAEA,cAAe,CAAAhB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}